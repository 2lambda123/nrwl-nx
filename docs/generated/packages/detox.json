{
  "githubRoot": "https://github.com/nrwl/nx/blob/master",
  "name": "detox",
  "description": "The Nx Plugin for Detox that contains executors and generators for allowing your workspace to use the powerful Detox integration testing capabilities.",
  "root": "C:/development/nx/packages/detox",
  "source": "C:\\development\\nx\\packages\\detox\\src",
  "documentation": [
    {
      "id": "overview",
      "name": "Overview",
      "path": "/packages/detox",
      "file": "shared/detox-plugin",
      "content": "![Detox logo](/shared/detox-logo.png)\r\n\r\nDetox is gray box end-to-end testing and automation library for mobile apps. It has a lot of great features:\r\n\r\n- Cross Platform\r\n- Runs on Devices\r\n- Automatically Synchronized\r\n- Test Runner Independent\r\n- Debuggable\r\n\r\n## Setting Up Detox\r\n\r\n### Install applesimutils (Mac only)\r\n\r\n[applesimutils](https://github.com/wix/AppleSimulatorUtils) is a collection of utils for Apple simulators.\r\n\r\n```sh\r\nbrew tap wix/brew\r\nbrew install applesimutils\r\n```\r\n\r\n### Install Jest Globally\r\n\r\n```sh\r\nnpm install -g jest\r\n```\r\n\r\n### Generating Applications\r\n\r\nBy default, when creating a mobile application, Nx will use Detox to create the e2e tests project.\r\n\r\n```bash\r\nnx g @nrwl/react-native:app frontend\r\n```\r\n\r\n### Creating a Detox E2E project for an existing project\r\n\r\nYou can create a new Detox E2E project for an existing mobile project.\r\n\r\nIf the `@nrwl/detox` package is not installed, install the version that matches your `@nrwl/workspace` version.\r\n\r\n```sh\r\n# yarn\r\nyarn add --dev @nrwl/detox\r\n```\r\n\r\n```sh\r\n# npm\r\nnpm install --save-dev @nrwl/detox\r\n```\r\n\r\nNext, generate an E2E project based on an existing project.\r\n\r\n```sh\r\nnx g @nrwl/detox:app your-app-name-e2e --project=your-app-name\r\n```\r\n\r\nReplace `your-app-name` with the app's name as defined in your `workspace.json` file.\r\n\r\nIn addition, you need to follow [instructions at Detox](https://github.com/wix/Detox/blob/master/docs/Introduction.Android.md) to do manual setup for Android files.\r\n\r\n## Using Detox\r\n\r\n### Testing Applications\r\n\r\n- Run `nx test-ios frontend-e2e` to build the iOS app and execute e2e tests with Detox for iOS (Mac only)\r\n- Run `nx test-android frontend-e2e` to build the Android app and execute e2e tests with Detox for Android\r\n\r\nYou can run below commands:\r\n\r\n- `nx build-ios frontend-e2e`: build the iOS app (Mac only)\r\n- `nx build-android frontend-e2e`: build the Android app\r\n\r\n### Testing against Prod Build\r\n\r\nYou can run your e2e test against a production build:\r\n\r\n- `nx test-ios frontend-e2e --prod`: to build the iOS app and execute e2e tests with Detox for iOS with Release configuration (Mac only)\r\n- `nx test-android frontend-e2e`: rto build the Android app and execute e2e tests with Detox for Android with release build type\r\n- `nx build-ios frontend-e2e --prod`: build the iOS app using Release configuration (Mac only)\r\n- `nx build-android frontend-e2e --prod`: build the Android app using release build type\r\n\r\n## Configuration\r\n\r\n### Using .detoxrc.json\r\n\r\nIf you need to fine tune your Detox setup, you can do so by modifying `.detoxrc.json` in the e2e project.\r\n\r\n#### Change Testing Simulator/Emulator\r\n\r\nFor iOS, in terminal, run `xcrun simctl list` to view a list of simulators on your Mac. To open your active simulator, `run open -a simulator`. In `frontend-e2e/.detoxrc.json`, you could change the simulator under `devices.simulator.device`.\r\n\r\nFor Android, in terminal, run `emulator -list-avds` to view a list of emulators installed. To open your emulator, run `emulator -avd <your emulator name>`. In `frontend-e2e/.detoxrc.json`, you could change the simulator under `devices.emulator.device`.\r\n\r\nIn additon, to override the device name specified in a configuration, you could use `--device-name` option: `nx test-ios <app-name-e2e> --device-name \"iPhone 11\"`. The `device-name` property provides you the ability to test an application run on specific device.\r\n\r\n```bash\r\nnx test-ios frontend-e2e --device-name \"iPhone 11\"\r\nnx test-android frontend-e2e --device-name \"Pixel_4a_API_30\"\r\n```\r\n"
    }
  ],
  "generators": [],
  "executors": []
}
