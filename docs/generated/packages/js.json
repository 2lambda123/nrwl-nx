{
  "githubRoot": "https://github.com/nrwl/nx/blob/master",
  "name": "js",
  "description": "The Nx plugin that provides the best experience for developing JavaScript and TypeScript projects.",
  "root": "C:/development/nx/packages/js",
  "source": "C:\\development\\nx\\packages\\js\\src",
  "documentation": [
    {
      "name": "Overview",
      "id": "overview",
      "path": "/packages/js",
      "file": "shared/js-plugin",
      "content": "The JS plugin contains executors and generators that are useful for JavaScript/TypeScript projects in an Nx workspace.\r\n\r\n## Setting Up JS\r\n\r\n### Installation\r\n\r\nIn any Nx workspace, you can install `@nrwl/js` by running the following commands if `@nrwl/js` package is not installed:\r\n\r\n```shell\r\nnpm i --save-dev @nrwl/js\r\n```\r\n\r\n```shell\r\nyarn add --dev @nrwl/js\r\n```\r\n\r\n### `ts` Preset\r\n\r\nWhen initializing a new Nx workspace, specifying `--preset=ts` will generate a workspace with `@nrwl/js` pre-installed.\r\n\r\n```shell\r\nnpx create-nx-workspace my-org --preset=ts\r\n```\r\n\r\n```shell\r\nyarn create nx-workspace my-org --preset=ts\r\n```\r\n\r\n## Create Libraries\r\n\r\nYou can add a new JS/TS library with the following command:\r\n\r\n```shell\r\nnx g @nrwl/js:lib my-lib\r\n```\r\n\r\n## Build\r\n\r\nYou can `build` libraries that are generated with `--buildable` flag.\r\n\r\n```shell\r\nnx g @nrwl/js:lib my-buildable-lib --buildable\r\n```\r\n\r\nGenerating a library with `--buildable` will add a `build` target to the library's `project.json` file allows the library to be built.\r\n\r\n```shell\r\nnx build my-buildable-lib\r\n```\r\n\r\n## Test\r\n\r\nYou can test a library with the following command:\r\n\r\n```shell\r\nnx test my-lib\r\n```\r\n\r\n## Lint\r\n\r\nYou can lint a library with the following command:\r\n\r\n```shell\r\nnx lint my-lib\r\n```\r\n\r\n## Compiler\r\n\r\nBy default, `@nrwl/js` uses [TypeScript Compiler (TSC)](https://www.typescriptlang.org/docs/handbook/2/basic-types.html#tsc-the-typescript-compiler), via `@nrwl/js:tsc` executor, to compile your libraries. Optionally, you can switch `tsc` out for a different compiler with `--compiler` flag when executing the generators.\r\n\r\nCurrently, `@nrwl/js` supports the following compilers:\r\n\r\n- [Speedy Web Compiler (SWC)](https://swc.rs)\r\n\r\n### SWC\r\n\r\n- Create a buildable library with `swc`\r\n\r\n```shell\r\nnx g @nrwl/js:lib my-swc-lib --compiler=swc --buildable\r\n```\r\n\r\n- Convert a `tsc` library to use `swc`\r\n\r\n```shell\r\nnx g @nrwl/js:convert-to-swc my-buildable-lib\r\n```\r\n\r\nNow the `build` command will use `@nrwl/js:swc` executor to compile your libraries.\r\n\r\n> The first time you generate a `swc` library or convert a `tsc` library over to `swc`, `@nrwl/js` will install the necessary dependencies to use `swc`.\r\n"
    }
  ],
  "generators": [],
  "executors": []
}
