{
  "githubRoot": "https://github.com/nrwl/nx/blob/master",
  "name": "react-native",
  "description": "React Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\n\nThe Nx Plugin for React Native contains generators for managing React Native applications and libraries within an Nx workspace. It provides:\n\n\n- Integration with libraries such as Jest, Detox, and Storybook.\n\n- Scaffolding for creating buildable libraries that can be published to npm.\n\n- Utilities for automatic workspace refactoring.",
  "root": "C:/development/nx/packages/react-native",
  "source": "C:\\development\\nx\\packages\\react-native\\src",
  "documentation": [
    {
      "id": "overview",
      "name": "Overview",
      "path": "/packages/react-native",
      "file": "shared/react-native-plugin",
      "content": "![React Logo](/shared/react-logo.png)\r\n\r\nReact Native brings React's declarative UI framework to iOS and Android. With React Native, you use native UI controls and have full access to the native platform.\r\n\r\nThe Nx Plugin for React Native contains generators for managing React Native applications and libraries within an Nx workspace. It provides:\r\n\r\n- Integration with libraries such as Jest, Detox, and Storybook.\r\n- Scaffolding for creating buildable libraries that can be published to npm.\r\n- Utilities for automatic workspace refactoring.\r\n\r\n## Setting Up React Native\r\n\r\n### Create a New Workspace\r\n\r\nThe easiest way to create your workspace is via `npx`.\r\n\r\n```bash\r\nnpx create-nx-workspace your-workspace-name \\\r\n--preset=react-native \\\r\n--appName=your-app-name\r\n```\r\n\r\n{% callout type=\"note\" title=\"Don't know what you need?\" %}\r\nYou can also run the command without arguments to go through the interactive prompts.\r\n{% /callout %}\r\n\r\n```bash\r\nnpx create-nx-workspace your-workspace-name\r\n```\r\n\r\n### Adding React Native to an Existing Workspace\r\n\r\nFor existing Nx workspaces, install the `@nrwl/react-native` package to add React Native capabilities to it.\r\n\r\n```bash\r\nnpm install @nrwl/react-native --save-dev\r\n\r\n# Or with yarn\r\nyarn add @nrwl/react-native --dev\r\n```\r\n\r\n### Generating Applications\r\n\r\nTo create additional React Native apps run:\r\n\r\n```bash\r\nnx g @nrwl/react-native:app your-app-name\r\n```\r\n\r\n### Generating Libraries\r\n\r\nTo generate a new library run:\r\n\r\n```bash\r\nnpx nx g @nrwl/react-native:lib your-lib-name\r\n```\r\n\r\n### Generating Components\r\n\r\nTo generate a new component inside library run:\r\n\r\n```bash\r\nnpx nx g @nrwl/react-native:component your-component-name --project=your-lib-name --export\r\n```\r\n\r\nReplace `your-lib-name` with the app's name as defined in your workspace.json file.\r\n\r\n## Using React Native\r\n\r\n- [run-ios](/packages/react-native/executors/run-ios) - Builds your app and starts it on iOS simulator or device\r\n- [run-android](/packages/react-native/executors/run-android) - Builds your app and starts it on a connected Android emulator or device\r\n- [build-android](/packages/react-native/executors/build-android) - Release Build for Android\r\n- [start](/packages/react-native/executors/start) - Starts the server that communicates with connected devices\r\n- [bundle](/packages/react-native/executors/bundle) - Builds the JavaScript bundle for offline use\r\n- [sync-deps](/packages/react-native/executors/sync-deps) - Syncs dependencies to package.json (required for autolinking)\r\n- [ensure-symlink](/packages/react-native/executors/ensure-symlink) - Ensure workspace node_modules is symlink under app's node_modules folder\r\n\r\n## More Documentation\r\n\r\n- [Using Detox](/packages/detox)\r\n- [Using Jest](/packages/jest)\r\n"
    }
  ],
  "generators": [],
  "executors": []
}
