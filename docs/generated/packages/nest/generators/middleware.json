{
  "name": "middleware",
  "factory": "./src/generators/middleware/middleware",
  "schema": {
    "$schema": "https://json-schema.org/schema",
    "$id": "NxNestMiddlewareGenerator",
    "title": "Nest Middleware Options Schema",
    "description": "Nest Middleware Options Schema.",
    "cli": "nx",
    "type": "object",
    "properties": {
      "name": {
        "description": "The name of the middleware.",
        "type": "string",
        "$default": { "$source": "argv", "index": 0 },
        "x-prompt": "What name would you like to use?"
      },
      "nameAndDirectoryFormat": {
        "description": "Whether to generate the component in the directory as provided, relative to the current working directory and ignoring the project (`as-provided`) or generate it using the project and directory relative to the workspace root (`derived`).",
        "type": "string",
        "enum": ["as-provided"]
      },
      "directory": {
        "description": "Directory where the generated files are placed. when `--nameAndDirectoryFormat=as-provided`, it will be relative to the current working directory. otherwise, it will be relative to the workspace root.",
        "type": "string",
        "aliases": ["dir", "path"]
      },
      "skipFormat": {
        "description": "Skip formatting files.",
        "type": "boolean",
        "default": false,
        "x-priority": "internal"
      },
      "unitTestRunner": {
        "description": "Test runner to use for unit tests.",
        "type": "string",
        "enum": ["jest", "none"],
        "default": "jest"
      },
      "language": {
        "description": "Nest middleware language.",
        "type": "string",
        "enum": ["js", "ts"]
      }
    },
    "additionalProperties": false,
    "required": ["name"],
    "presets": []
  },
  "description": "Run the `middleware` NestJS generator with Nx project support.",
  "implementation": "/packages/nest/src/generators/middleware/middleware.ts",
  "aliases": [],
  "hidden": false,
  "path": "/packages/nest/src/generators/middleware/schema.json",
  "type": "generator"
}
