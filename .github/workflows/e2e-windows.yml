name: E2E matrix (Windows)

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

permissions: {}
jobs:
  e2e:
    permissions:
      contents: read  #  to fetch code (actions/checkout)

    runs-on: windows-latest
    strategy:
      matrix:
        node_version:
          - '16'
        package_manager:
          - npm
        packages:
          - e2e-add-nx-to-monorepo
          - e2e-angular-core
          - e2e-angular-extensions
          - e2e-cra-to-nx
          - e2e-cypress
          - e2e-esbuild
          - e2e-jest
          - e2e-js
          - e2e-lerna-smoke-tests
          - e2e-linter
          - e2e-make-angular-cli-faster
          - e2e-next
          - e2e-node
          - e2e-nx-init
          - e2e-nx-misc
          - e2e-nx-plugin
          - e2e-nx-run
          - e2e-react
          - e2e-web
          - e2e-rollup
          - e2e-storybook
          - e2e-storybook-angular
          - e2e-vite
          - e2e-webpack
          - e2e-workspace-create
          - e2e-e2e-workspace-create-npm
          - e2e-graph-client
      fail-fast: false

    name: ${{ matrix.packages }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node_version }}
        registry-url: http://localhost:4872

    - name: Yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - name: Cache yarn
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: windows-node-${{ matrix.node_version }}-yarn-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          windows-node-${{ matrix.node_version }}-yarn-
          windows-node-${{ matrix.node_version }}-
          windows-

    - name: Install packages
      run: yarn install --prefer-offline --frozen-lockfile --non-interactive

    - name: Run e2e tests
      run: yarn nx run-many --target=e2e --projects="${{ join(matrix.packages) }}" --parallel=1
      env:
        GIT_AUTHOR_EMAIL: test@test.com
        GIT_AUTHOR_NAME: Test
        GIT_COMMITTER_EMAIL: test@test.com
        GIT_COMMITTER_NAME: Test
        NX_E2E_CI_CACHE_KEY: e2e-gha-windows-${{ matrix.node_version }}-${{ matrix.package_manager }}
        NX_E2E_RUN_CYPRESS: ${{ 'true' }}
        NODE_OPTIONS: --max_old_space_size=8192
        SELECTED_PM: ${{ matrix.package_manager }}
        npm_config_registry: http://localhost:4872
        NX_VERBOSE_LOGGING: ${{ 'true' }}
        NX_E2E_SKIP_BUILD_CLEANUP: ${{ 'true' }}
        NX_CACHE_DIRECTORY: ${{ 'tmp' }}

      - name: Notify test failure
        if: ${{ failure() && github.repository_owner == 'nrwl' && github.event_name !== 'workflow_dispatch' }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: 'failure'
          notification_title: 'Test requires attention'
          message_format: '{emoji} *${{ join(matrix.project) }}* has {status_message}
            *OS* ${{ matrix.os-name }}
            *Node* v${{ matrix.node_version }}
            *Package manager* ${{ matrix.package_manager }}
            *Workflow* {workflow}'
          footer: '<{run_url}|View Run> / Last commit <{commit_url}|{commit_sha}>'
          # mention_groups: 'S690SFLP9'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

    - name: Setup tmate session
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled && failure() }}
      uses: mxschmitt/action-tmate@v3.8
      with:
        sudo: false # disable sudo for windows debugging

  report:
    if: ${{ success() && github.repository_owner == 'nrwl' && github.event_name != 'workflow_dispatch' }}
    needs: e2e
    runs-on: ubuntu-latest
    name: Report status
    steps:
      - name: Send notification
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ needs.e2e.result }}
          message_format: '{emoji} Workflow has {status_message}'
          notification_title: '{workflow}'
          footer: '<{run_url}|View Run> / Last commit <{commit_url}|{commit_sha}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
