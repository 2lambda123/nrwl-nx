name: CI nx-dev e2e

on: pull_request

jobs:
  determine_if_nx_dev_will_be_deployed:
    runs-on: ubuntu-latest
    name: Determine if an nx-dev preview deployment will occur
    outputs:
      will_be_deployed: ${{ steps.check_will_be_deployed.outputs.will_be_deployed }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout
        with:
          # By default, PRs will be checked-out based on the Merge Commit, but we want the actual branch HEAD.
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0

      - name: Determine if nx-dev deployment will occur based on the result of the same script we use in Vercel
        id: check_will_be_deployed
        run: |
          WILL_BE_DEPLOYED=$(./scripts/vercel/ignore-build.sh nx-dev && echo "" || echo "true")
          echo "::set-output name=will_be_deployed::$WILL_BE_DEPLOYED"
        shell: bash

  nx_dev_e2e_tests:
    needs: [determine_if_nx_dev_will_be_deployed]
    if: ${{ needs.determine_if_nx_dev_will_be_deployed.outputs.will_be_deployed }}
    runs-on: ubuntu-latest
    name: Run e2e tests on Vercel preview deployment
    steps:
      - uses: actions/checkout@v3
        name: Checkout
        with:
          # By default, PRs will be checked-out in a detached HEAD state, so pass in the PR head ref
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Wait for the nx-dev preview deployment
        uses: jameshenry/wait-for-nx-deployments@v0.1
        id: wait_for_deployments
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # When there is just a single deployment for a repo, Vercel just calls it "Preview"
          deployments-to-wait-for: '{ "nx-dev": "Preview" }'
          timeout: 1800 # 30 minutes
          interval: 20 # seconds
          github-head-sha: ${{ github.event.pull_request.head.sha }}

      - name: Run e2e tests for nx-dev against the preview deployment
        run: npx nx e2e nx-dev-e2e --skipServe --baseUrl ${{ fromJSON(steps.wait_for_deployments.outputs.deployments)['nx-dev'].url }}

      - name: Store the cypress artifacts (if any)
        uses: actions/upload-artifact@v3
        with:
          name: cypress-artifacts
          path: dist/cypress/apps/nx-dev-e2e/
