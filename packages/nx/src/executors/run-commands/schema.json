{
  "version": 2,
  "title": "Run Commands",
  "description": "Run any custom commands with Nx.",
  "type": "object",
  "cli": "nx",
  "outputCapture": "pipe",
  "presets": [
    {
      "name": "Arguments forwarding",
      "keys": ["commands"]
    },
    {
      "name": "Custom done conditions",
      "keys": ["commands", "readyWhen"]
    },
    {
      "name": "Setting the cwd",
      "keys": ["commands", "cwd"]
    }
  ],
  "properties": {
    "commands": {
      "type": "array",
      "description": "Commands to run in child process.",
      "items": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to run in child process."
              },
              "forwardAllArgs": {
                "type": "boolean",
                "description": "Whether arguments should be forwarded when interpolation is not present."
              },
              "prefix": {
                "type": "string",
                "description": "Prefix in front of every line out of the output"
              },
              "color": {
                "type": "string",
                "description": "Color of the output",
                "enum": [
                  "black",
                  "red",
                  "green",
                  "yellow",
                  "blue",
                  "magenta",
                  "cyan",
                  "white"
                ]
              },
              "bgColor": {
                "type": "string",
                "description": "Background color of the output",
                "enum": [
                  "bgBlack",
                  "bgRed",
                  "bgGreen",
                  "bgYellow",
                  "bgBlue",
                  "bgMagenta",
                  "bgCyan",
                  "bgWhite"
                ]
              },
              "description": {
                "type": "string",
                "description": "An optional description useful for inline documentation purposes. It is not used as part of the execution of the command."
              }
            },
            "additionalProperties": false,
            "required": ["command"]
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "command": {
      "type": "string",
      "description": "Command to run in child process."
    },
    "parallel": {
      "type": "boolean",
      "description": "Run commands in parallel.",
      "default": true
    },
    "readyWhen": {
      "type": "string",
      "description": "String to appear in `stdout` or `stderr` that indicates that the task is done. When running multiple commands, this option can only be used when `parallel` is set to `true`. If not specified, the task is done when all the child processes complete."
    },
    "args": {
      "type": "string",
      "description": "Extra arguments. You can pass them as follows: nx run project:target --args='--wait=100'. You can then use {args.wait} syntax to interpolate them in the workspace config file. See example [above](#chaining-commands-interpolating-args-and-setting-the-cwd)"
    },
    "envFile": {
      "type": "string",
      "description": "A custom .env file path to explicitly attempt to load. When this option is present 'loadDotEnvFile' and the task runner option 'loadDotEnvFiles' are ignored."
    },
    "loadDotEnvFile": {
      "type": "boolean",
      "default": true,
      "description": "Determines if by default a '.env' file is attempted to be loaded from the current working directory. This behaviour can also be prevented by setting the task runner option 'loadDotEnvFiles' to false. Any explicit value for this option takes precedence over the task runner option."
    },
    "color": {
      "type": "boolean",
      "description": "Use colors when showing output of command.",
      "default": false
    },
    "outputPath": {
      "description": "Allows you to specify where the build artifacts are stored. This allows Nx Cloud to pick them up correctly, in the case that the build artifacts are placed somewhere other than the top level dist folder.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "cwd": {
      "type": "string",
      "description": "Current working directory of the commands. If it's not specified the commands will run in the workspace root, if a relative path is specified the commands will run in that path relative to the workspace root and if it's an absolute path the commands will run in that path."
    },
    "__unparsed__": {
      "hidden": true,
      "type": "array",
      "items": {
        "type": "string"
      },
      "$default": {
        "$source": "unparsed"
      }
    }
  },
  "additionalProperties": true,
  "oneOf": [
    {
      "required": ["commands"]
    },
    {
      "required": ["command"]
    }
  ],
  "examplesFile": "../../../docs/run-commands-examples.md"
}
