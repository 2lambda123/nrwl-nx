// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CI Workflow generator with npm should generate azure CI config 1`] = `
"name: CI

trigger:
  - main
pr:
  - main

variables:
  CI: 'true'
  \${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(System.PullRequest.PullRequestNumber)
    TARGET_BRANCH: $[replace(variables['System.PullRequest.TargetBranch'],'refs/heads/','origin/')]
    BASE_SHA: $(git merge-base $(TARGET_BRANCH) HEAD)
  \${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(Build.SourceBranchName)
    BASE_SHA: $(git rev-parse HEAD~1)
  HEAD_SHA: $(git rev-parse HEAD)

jobs:
  - job: main
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: npm ci
      # uncomment to enable task distribution
      # - script: npx nx-cloud start-ci-run --distributes-on="5 linux-medium"
      - script: npx nx-cloud record -- nx format:check --base=$(BASE_SHA) --head=$(HEAD_SHA)
      - script: npx nx affected --base=$(BASE_SHA) --head=$(HEAD_SHA) -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with npm should generate bitbucket pipelines config 1`] = `
"image: node:20

clone:
  depth: full

pipelines:
  pull-requests:
    '**':
      - parallel:
          - step:
              name: CI
              script:
                - export NX_BRANCH=$BITBUCKET_PR_ID

                - npm ci
                # uncomment to enable task distribution
                # - npx nx-cloud start-ci-run --distributes-on="5 linux-medium"
                - npx nx-cloud record -- nx format:check
                - npx nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with npm should generate circleci CI config 1`] = `
"version: 2.1

orbs:
  nx: nrwl/nx@1.6.2

jobs:
  main:
    docker:
      - image: cimg/node:lts-browsers
    steps:
      - checkout
      - run: npm ci
      - nx/set-shas:
          main-branch-name: 'main'
      # uncomment to enable task distribution
      # - run: npx nx-cloud start-ci-run --distributes-on="5 linux-medium"
      - run: npx nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD
      - run: npx nx affected --base=$NX_BASE --head=$NX_HEAD -t=lint,test,build --parallel=3

workflows:
  version: 2

  ci:
    jobs:
      - main
"
`;

exports[`CI Workflow generator with npm should generate github CI config 1`] = `
"name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      # uncomment to enable task distribution
      # - run: npx nx-cloud start-ci-run --distributes-on="5 linux-medium"

      - run: npx nx-cloud record -- nx format:check
      - run: npx nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with npm should generate github CI config with custom name 1`] = `
"name: My custom-workflow

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - uses: nrwl/nx-set-shas@v4

      # uncomment to enable task distribution
      # - run: npx nx-cloud start-ci-run --distributes-on="5 linux-medium"

      - run: npx nx-cloud record -- nx format:check
      - run: npx nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with npm should generate gitlab config 1`] = `
"image: node:20
variables:
  CI: 'true'

# Main job
CI:
  interruptible: true
  only:
    - main
    - merge_requests
  script:
    - npm ci
    - NX_HEAD=$CI_COMMIT_SHA
    - NX_BASE=\${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}
    # uncomment to enable task distribution
    # - npx nx-cloud start-ci-run --distributes-on="5 linux-medium"
    - npx nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD
    - npx nx affected --base=$NX_BASE --head=$NX_HEAD -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with npm should throw error is nx cloud is not set 1`] = `"This workspace is not connected to Nx Cloud."`;

exports[`CI Workflow generator with pnpm should generate azure CI config 1`] = `
"name: CI

trigger:
  - main
pr:
  - main

variables:
  CI: 'true'
  \${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(System.PullRequest.PullRequestNumber)
    TARGET_BRANCH: $[replace(variables['System.PullRequest.TargetBranch'],'refs/heads/','origin/')]
    BASE_SHA: $(git merge-base $(TARGET_BRANCH) HEAD)
  \${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(Build.SourceBranchName)
    BASE_SHA: $(git rev-parse HEAD~1)
  HEAD_SHA: $(git rev-parse HEAD)

jobs:
  - job: main
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: npm install --prefix=$HOME/.local -g pnpm@8
        displayName: Install PNPM
      - script: pnpm install --frozen-lockfile
      # uncomment to enable task distribution
      # - script: pnpm exec nx-cloud start-ci-run --distributes-on="5 linux-medium"
      - script: pnpm exec nx-cloud record -- nx format:check --base=$(BASE_SHA) --head=$(HEAD_SHA)
      - script: pnpm exec nx affected --base=$(BASE_SHA) --head=$(HEAD_SHA) -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with pnpm should generate bitbucket pipelines config 1`] = `
"image: node:20

clone:
  depth: full

pipelines:
  pull-requests:
    '**':
      - parallel:
          - step:
              name: CI
              script:
                - export NX_BRANCH=$BITBUCKET_PR_ID

                - npm install --prefix=$HOME/.local -g pnpm@8

                - pnpm install --frozen-lockfile
                # uncomment to enable task distribution
                # - pnpm exec nx-cloud start-ci-run --distributes-on="5 linux-medium"
                - pnpm exec nx-cloud record -- nx format:check
                - pnpm exec nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with pnpm should generate circleci CI config 1`] = `
"version: 2.1

orbs:
  nx: nrwl/nx@1.6.2

jobs:
  main:
    docker:
      - image: cimg/node:lts-browsers
    steps:
      - checkout

      - run:
          name: Install PNPM
          command: npm install --prefix=$HOME/.local -g pnpm@8
      - run: pnpm install --frozen-lockfile
      - nx/set-shas:
          main-branch-name: 'main'
      # uncomment to enable task distribution
      # - run: pnpm exec nx-cloud start-ci-run --distributes-on="5 linux-medium"
      - run: pnpm exec nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD
      - run: pnpm exec nx affected --base=$NX_BASE --head=$NX_HEAD -t=lint,test,build --parallel=3

workflows:
  version: 2

  ci:
    jobs:
      - main
"
`;

exports[`CI Workflow generator with pnpm should generate github CI config 1`] = `
"name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 8
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      # uncomment to enable task distribution
      # - run: pnpm exec nx-cloud start-ci-run --distributes-on="5 linux-medium"

      - run: pnpm exec nx-cloud record -- nx format:check
      - run: pnpm exec nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with pnpm should generate github CI config with custom name 1`] = `
"name: My custom-workflow

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 8
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      # uncomment to enable task distribution
      # - run: pnpm exec nx-cloud start-ci-run --distributes-on="5 linux-medium"

      - run: pnpm exec nx-cloud record -- nx format:check
      - run: pnpm exec nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with pnpm should generate gitlab config 1`] = `
"image: node:20
variables:
  CI: 'true'

# Main job
CI:
  interruptible: true
  only:
    - main
    - merge_requests
  script:
    - npm install --prefix=$HOME/.local -g pnpm@8

    - pnpm install --frozen-lockfile
    - NX_HEAD=$CI_COMMIT_SHA
    - NX_BASE=\${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}
    # uncomment to enable task distribution
    # - pnpm exec nx-cloud start-ci-run --distributes-on="5 linux-medium"
    - pnpm exec nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD
    - pnpm exec nx affected --base=$NX_BASE --head=$NX_HEAD -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with pnpm should throw error is nx cloud is not set 1`] = `"This workspace is not connected to Nx Cloud."`;

exports[`CI Workflow generator with yarn should generate azure CI config 1`] = `
"name: CI

trigger:
  - main
pr:
  - main

variables:
  CI: 'true'
  \${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(System.PullRequest.PullRequestNumber)
    TARGET_BRANCH: $[replace(variables['System.PullRequest.TargetBranch'],'refs/heads/','origin/')]
    BASE_SHA: $(git merge-base $(TARGET_BRANCH) HEAD)
  \${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(Build.SourceBranchName)
    BASE_SHA: $(git rev-parse HEAD~1)
  HEAD_SHA: $(git rev-parse HEAD)

jobs:
  - job: main
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - script: yarn install --frozen-lockfile
      # uncomment to enable task distribution
      # - script: yarn nx-cloud start-ci-run --distributes-on="5 linux-medium"
      - script: yarn nx-cloud record -- nx format:check --base=$(BASE_SHA) --head=$(HEAD_SHA)
      - script: yarn nx affected --base=$(BASE_SHA) --head=$(HEAD_SHA) -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with yarn should generate bitbucket pipelines config 1`] = `
"image: node:20

clone:
  depth: full

pipelines:
  pull-requests:
    '**':
      - parallel:
          - step:
              name: CI
              script:
                - export NX_BRANCH=$BITBUCKET_PR_ID

                - yarn install --frozen-lockfile
                # uncomment to enable task distribution
                # - yarn nx-cloud start-ci-run --distributes-on="5 linux-medium"
                - yarn nx-cloud record -- nx format:check
                - yarn nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with yarn should generate circleci CI config 1`] = `
"version: 2.1

orbs:
  nx: nrwl/nx@1.6.2

jobs:
  main:
    docker:
      - image: cimg/node:lts-browsers
    steps:
      - checkout
      - run: yarn install --frozen-lockfile
      - nx/set-shas:
          main-branch-name: 'main'
      # uncomment to enable task distribution
      # - run: yarn nx-cloud start-ci-run --distributes-on="5 linux-medium"
      - run: yarn nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD
      - run: yarn nx affected --base=$NX_BASE --head=$NX_HEAD -t=lint,test,build --parallel=3

workflows:
  version: 2

  ci:
    jobs:
      - main
"
`;

exports[`CI Workflow generator with yarn should generate github CI config 1`] = `
"name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      # uncomment to enable task distribution
      # - run: yarn nx-cloud start-ci-run --distributes-on="5 linux-medium"

      - run: yarn nx-cloud record -- nx format:check
      - run: yarn nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with yarn should generate github CI config with custom name 1`] = `
"name: My custom-workflow

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Cache node_modules
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      # uncomment to enable task distribution
      # - run: yarn nx-cloud start-ci-run --distributes-on="5 linux-medium"

      - run: yarn nx-cloud record -- nx format:check
      - run: yarn nx affected -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with yarn should generate gitlab config 1`] = `
"image: node:20
variables:
  CI: 'true'

# Main job
CI:
  interruptible: true
  only:
    - main
    - merge_requests
  script:
    - yarn install --frozen-lockfile
    - NX_HEAD=$CI_COMMIT_SHA
    - NX_BASE=\${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}
    # uncomment to enable task distribution
    # - yarn nx-cloud start-ci-run --distributes-on="5 linux-medium"
    - yarn nx-cloud record -- nx format:check --base=$NX_BASE --head=$NX_HEAD
    - yarn nx affected --base=$NX_BASE --head=$NX_HEAD -t=lint,test,build --parallel=3
"
`;

exports[`CI Workflow generator with yarn should throw error is nx cloud is not set 1`] = `"This workspace is not connected to Nx Cloud."`;
