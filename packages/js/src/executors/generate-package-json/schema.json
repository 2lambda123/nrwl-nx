{
  "$schema": "http://json-schema.org/schema",
  "outputCapture": "direct-nodejs",
  "version": 2,
  "cli": "nx",
  "title": "GeneratePackageJson builder",
  "description": "Generates a package.json file.",
  "type": "object",
  "properties": {
    "main": {
      "type": "string",
      "description": "The path to the entry file, relative to project.",
      "alias": "entryFile",
      "x-completion-type": "file",
      "x-completion-glob": "**/*@(.js|.ts)"
    },
    "outputPath": {
      "type": "string",
      "description": "The output path of the generated files.",
      "x-completion-type": "directory",
      "x-priority": "important"
    },
    "tsConfig": {
      "type": "string",
      "description": "The path to tsconfig file.",
      "x-completion-type": "file",
      "x-completion-glob": "tsconfig.*.json"
    },
    "buildableProjectDepsInPackageJsonType": {
      "type": "string",
      "description": "The type of dependency to use for buildable project dependencies in the generated `package.json`.",
      "enum": ["dependencies", "devDependencies"],
      "default": "dependencies"
    },
    "excludeLibsInPackageJson": {
      "type": "boolean",
      "description": "Exclude libraries in the `package.json` file. This is useful if you are using a `package.json` file in the project's directory.",
      "default": true
    },
    "generateLockfile": {
      "type": "boolean",
      "description": "Generate a lock file for the generated `package.json`.",
      "default": true
    },
    "format": {
      "type": "string",
      "description": "List of module formats to output. Defaults to matching format from tsconfig (e.g. CJS for CommonJS, and ESM otherwise).",
      "alias": "f",
      "enum": ["esm", "cjs"],
      "default": "esm"
    }
  },
  "definitions": {},
  "required": ["main", "outputPath", "tsConfig"],
  "examplesFile": "../../../docs/generate-package-json.examples.md"
}
