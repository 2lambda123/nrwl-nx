{
  "$schema": "http://json-schema.org/schema",
  "$id": "NxEsBuildProject",
  "cli": "nx",
  "title": "Add EsBuild Configuration to a project",
  "description": "Add EsBuild Configuration to a project.",
  "examples": [
    {
      "command": "nx g @nrwl/esbuild:esbuild-project my-package",
      "description": "Add a build target to 'my-package' library."
    },
    {
      "command": "nx g @nrwl/esbuild:esbuild-project my-package --importPath=@acme/package",
      "description": "Add a build target with a custom npm import path."
    },
    {
      "command": "nx g @nrwl/esbuild:esbuild-project my-package --main=packages/my-package/custom-entry.ts",
      "description": "Add a build target with a custom main entry file."
    }
  ],
  "type": "object",
  "properties": {
    "project": {
      "type": "string",
      "description": "The name of the project.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-dropdown": "project",
      "x-prompt": "What is the name of the project to set up a esbuild for?"
    },
    "main": {
      "type": "string",
      "description": "Path relative to the workspace root for the main entry file. Defaults to '<projectRoot>/src/main.ts'.",
      "alias": "entryFile"
    },
    "tsConfig": {
      "type": "string",
      "description": "Path relative to the workspace root for the tsconfig file to build with. Defaults to '<projectRoot>/tsconfig.app.json'."
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false
    },
    "skipPackageJson": {
      "type": "boolean",
      "default": false,
      "description": "Do not add dependencies to `package.json`."
    },
    "importPath": {
      "type": "string",
      "description": "The library name used to import it, like `@myorg/my-awesome-lib`."
    }
  },
  "required": []
}
