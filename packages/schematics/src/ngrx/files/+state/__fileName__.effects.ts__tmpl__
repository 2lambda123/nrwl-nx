import {Injectable} from '@angular/core';
import {Effect, Actions} from '@ngrx/effects';
import {DataPersistence} from '@nrwl/nx';
import {of} from 'rxjs/observable/of';
import 'rxjs/add/operator/switchMap';
import {<%= className %>State} from './<%= fileName %>.interfaces';
import * as <%= propertyName %> from './<%= fileName %>.actions';

@Injectable()
export class <%= className %>Effects {
  @Effect() loadData = this.d.pessimisticUpdate(<%= propertyName %>.LOAD, {
    run: (a: <%= propertyName %>.Load, state: <%= className %>State) => {
      return new <%= propertyName %>.LoadSuccess({});
    },

    onError: (a: <%= propertyName %>.Load, error) => {
      console.error('Error', error);
    }
  });

  constructor(private actions: Actions, private d: DataPersistence<<%= className %>State>) {}
}
